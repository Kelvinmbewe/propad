generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  VERIFIER
  AGENT
  LANDLORD
  USER
}

enum ListingStatus {
  DRAFT
  PENDING
  ACTIVE
  REJECTED
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  passwordHash String?
  role         Role     @default(USER)
  listings     Listing[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Listing {
  id          String        @id @default(cuid())
  title       String
  description String
  priceUsd    Decimal       @db.Numeric(10, 2)
  status      ListingStatus @default(PENDING)
  ownerId     String
  owner       User          @relation(fields: [ownerId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Verification {
  id        String   @id @default(cuid())
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId String   @unique
  verifier  User?    @relation(fields: [verifierId], references: [id])
  verifierId String?
  status    String   @default("PENDING")
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RewardPool {
  id         String   @id @default(cuid())
  balanceUsd Float    @default(0)
  createdAt  DateTime @default(now())
}

model AuditLog {
  id        String   @id @default(cuid())
  actorId   String?
  actor     User?    @relation(fields: [actorId], references: [id])
  action    String
  payload   Json
  createdAt DateTime @default(now())
}
